import streamlit as st
import pandas as pd
import plotly.express as px

# Carregar dados do arquivo Excel
file_path = (
    r"Caminho_do_arquivo"
)
df = pd.read_excel(file_path)

# Dicion√°rio de emojis para marcas
emoji_dict = {
    "HP": "",
    "Dell": "",
    "Lenovo": "",
    "Megaware": "",
    "PCware": "",
    "Itautec S.A.": "",
}

# Configurar p√°gina para largura total
st.set_page_config(layout="wide")

# Barra lateral com op√ß√£o de menu usando radio
selected_page = st.sidebar.radio(
    "Selecione uma P√°gina",
    ["üè† P√°gina Inicial", "üîç Consulta de Dados", "üìä Estat√≠sticas"],
)

# P√°gina Inicial
if "P√°gina Inicial" in selected_page:
    st.image(
        "http://hospitalmestrevitalino.com.br//images/loghmv.png", width=100
    )  # Substitua pelo URL ou caminho da sua imagem
    st.title("Consulta de Invent√°rio de M√°quinas")

    st.markdown(
        """
        Esta aplica√ß√£o permite a consulta do invent√°rio de m√°quinas do Hospital Mestre Vitalino (HTRI). 
        Voc√™ pode visualizar informa√ß√µes sobre as m√°quinas com base na marca e explorar estat√≠sticas gerais.

        **Instru√ß√µes:**
        - Selecione 'Consulta de Dados' no menu para explorar as m√°quinas por marca.
        - Selecione 'Estat√≠sticas' para ver estat√≠sticas gerais com base nos dados.

        Sinta-se √† vontade para explorar e analisar os dados dispon√≠veis!
        """
    )

# P√°gina de Consulta de Dados
elif "Consulta de Dados" in selected_page:
    st.title("Consulta de Dados por Marca")

    # Verificar se as colunas 'HOST' e 'MARCA' existem no DataFrame
    if "HOST" in df.columns and "MARCA" in df.columns:
        # Obter a lista √∫nica de marcas
        marcas = df["MARCA"].unique()

        # Criar um menu com as marcas
        selected_marca = st.selectbox(
            "Selecione uma Marca", ["Selecione uma Marca"] + list(marcas)
        )

        # Mostrar dados apenas se uma marca v√°lida for selecionada
        if selected_marca and selected_marca != "Selecione uma Marca":
            # Filtrar o DataFrame pela marca selecionada
            filtered_df = df[df["MARCA"] == selected_marca]

            # Adicionar emojis ao lado do nome das marcas
            emoji = emoji_dict.get(selected_marca, "")
            info_header = f"üñ•Ô∏è {emoji} Informa√ß√µes de M√°quinas  {selected_marca}"
            st.subheader(info_header)
            st.table(filtered_df[["HOST", "MARCA"]])
        else:
            st.info("Selecione uma marca para visualizar os dados.")
    else:
        st.error("Erro: Os dados n√£o cont√™m as colunas 'HOST' e 'MARCA'.")

# P√°gina de Estat√≠sticas
else:
    st.title("Estat√≠sticas Gerais")

    # Gr√°fico de barras mostrando a quantidade de m√°quinas por marca
    fig = px.bar(
        df["MARCA"].value_counts(),
        x=df["MARCA"].value_counts().index,
        y=df["MARCA"].value_counts().values,
        labels={"y": "Quantidade", "x": "Marca"},
    )
    fig.update_layout(
        title="Quantidade de M√°quinas por Marca",
        xaxis_title="Marca",
        yaxis_title="Quantidade",
    )
    st.plotly_chart(fig)
